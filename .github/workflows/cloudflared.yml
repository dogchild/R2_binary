name: Deploy Cloudflared Binaries to R2

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 安装依赖工具
      - name: Install Tools (UPX)
        run: |
          sudo apt-get update
          sudo apt-get install -y upx-ucl

      # 步骤 3: 手动安装并配置 rclone (全新方法)
      - name: Install and Configure rclone
        run: |
          # 从官方渠道下载并执行安装脚本
          echo "Installing rclone..."
          curl https://rclone.org/install.sh | sudo bash
          
          # 创建 rclone 的配置文件夹
          echo "Creating rclone config directory..."
          mkdir -p ~/.config/rclone
          
          # 将您的 R2 凭据写入 rclone 配置文件
          echo "Writing rclone config file..."
          echo "[myR2]
          type = s3
          provider = Cloudflare
          access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
          secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}
          endpoint = https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com" > ~/.config/rclone/rclone.conf

      # 步骤 4: 处理 AMD64 架构的 Cloudflared
      - name: Download, Compress, and Upload AMD64
        run: |
          # ... (下载和压缩命令不变)
          echo "Uploading to gfw bucket..."
          rclone copyto --s3-no-check-bucket cloudflared-amd64-compressed myR2:gfw/cloudflared --progress

      # 步骤 5: 处理 ARM64 架构的 Cloudflared
      - name: Download, Compress, and Upload ARM64
        run: |
          # ... (下载和压缩命令不变)
          echo "Uploading to gfw-arm bucket..."
          rclone copyto --s3-no-check-bucket cloudflared-arm64-compressed myR2:gfw-arm/cloudflared --progress

      # 步骤 6: 刷新 Cloudflare 缓存
      - name: Purge Cloudflare Cache
        run: |
          echo "Purging Cloudflare cache..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
               -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
               -H "Content-Type: application/json" \
               --data '{
                 "files": [
                   "https://amd.dogchild.eu.org/cloudflared",
                   "https://arm.dogchild.eu.org/cloudflared"
                 ]
               }'
